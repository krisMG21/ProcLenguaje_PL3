# Generated from MiniB.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,39,373,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,
        7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,3,
        11,110,8,11,1,12,1,12,1,12,1,12,1,12,1,12,3,12,118,8,12,1,13,1,13,
        1,13,1,13,3,13,124,8,13,1,14,1,14,1,14,1,14,1,14,1,14,3,14,132,8,
        14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,3,15,144,8,
        15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,3,16,156,8,
        16,1,17,1,17,1,17,1,17,3,17,162,8,17,1,18,1,18,1,18,1,18,1,18,1,
        18,1,18,1,18,3,18,172,8,18,1,19,1,19,1,19,1,19,1,19,1,19,3,19,180,
        8,19,1,20,1,20,1,20,1,20,3,20,186,8,20,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,3,21,196,8,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,22,1,22,3,22,208,8,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,3,23,222,8,23,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,24,1,24,3,24,234,8,24,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,252,
        8,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,262,8,26,1,27,
        1,27,1,27,1,27,1,27,1,27,3,27,270,8,27,1,28,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,3,28,280,8,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
        3,29,289,8,29,1,30,1,30,1,30,1,30,1,30,1,30,3,30,297,8,30,1,31,1,
        31,1,31,1,31,1,31,1,31,3,31,305,8,31,1,32,1,32,1,32,1,32,1,32,1,
        32,1,32,1,32,1,32,1,32,3,32,317,8,32,1,33,1,33,5,33,321,8,33,10,
        33,12,33,324,9,33,1,34,4,34,327,8,34,11,34,12,34,328,1,34,1,34,4,
        34,333,8,34,11,34,12,34,334,3,34,337,8,34,1,35,1,35,5,35,341,8,35,
        10,35,12,35,344,9,35,1,35,1,35,1,36,3,36,349,8,36,1,36,1,36,1,37,
        1,37,1,37,1,37,1,37,5,37,358,8,37,10,37,12,37,361,9,37,1,37,1,37,
        1,37,1,37,1,38,4,38,368,8,38,11,38,12,38,369,1,38,1,38,0,0,39,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
        14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
        25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,
        36,73,37,75,38,77,39,1,0,6,3,0,65,90,95,95,97,122,4,0,48,57,65,90,
        95,95,97,122,1,0,48,57,3,0,10,10,13,13,34,34,2,0,10,10,13,13,2,0,
        9,9,32,32,403,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
        9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
        19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,
        29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,
        39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,
        49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,
        59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,
        69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,1,
        79,1,0,0,0,3,81,1,0,0,0,5,83,1,0,0,0,7,85,1,0,0,0,9,88,1,0,0,0,11,
        91,1,0,0,0,13,93,1,0,0,0,15,95,1,0,0,0,17,97,1,0,0,0,19,99,1,0,0,
        0,21,101,1,0,0,0,23,109,1,0,0,0,25,117,1,0,0,0,27,123,1,0,0,0,29,
        131,1,0,0,0,31,143,1,0,0,0,33,155,1,0,0,0,35,161,1,0,0,0,37,171,
        1,0,0,0,39,179,1,0,0,0,41,185,1,0,0,0,43,195,1,0,0,0,45,207,1,0,
        0,0,47,221,1,0,0,0,49,233,1,0,0,0,51,251,1,0,0,0,53,261,1,0,0,0,
        55,269,1,0,0,0,57,279,1,0,0,0,59,288,1,0,0,0,61,296,1,0,0,0,63,304,
        1,0,0,0,65,316,1,0,0,0,67,318,1,0,0,0,69,326,1,0,0,0,71,338,1,0,
        0,0,73,348,1,0,0,0,75,352,1,0,0,0,77,367,1,0,0,0,79,80,5,61,0,0,
        80,2,1,0,0,0,81,82,5,60,0,0,82,4,1,0,0,0,83,84,5,62,0,0,84,6,1,0,
        0,0,85,86,5,60,0,0,86,87,5,61,0,0,87,8,1,0,0,0,88,89,5,62,0,0,89,
        90,5,61,0,0,90,10,1,0,0,0,91,92,5,43,0,0,92,12,1,0,0,0,93,94,5,45,
        0,0,94,14,1,0,0,0,95,96,5,42,0,0,96,16,1,0,0,0,97,98,5,47,0,0,98,
        18,1,0,0,0,99,100,5,40,0,0,100,20,1,0,0,0,101,102,5,41,0,0,102,22,
        1,0,0,0,103,104,5,78,0,0,104,105,5,79,0,0,105,110,5,84,0,0,106,107,
        5,110,0,0,107,108,5,111,0,0,108,110,5,116,0,0,109,103,1,0,0,0,109,
        106,1,0,0,0,110,24,1,0,0,0,111,112,5,65,0,0,112,113,5,78,0,0,113,
        118,5,68,0,0,114,115,5,97,0,0,115,116,5,110,0,0,116,118,5,100,0,
        0,117,111,1,0,0,0,117,114,1,0,0,0,118,26,1,0,0,0,119,120,5,79,0,
        0,120,124,5,82,0,0,121,122,5,111,0,0,122,124,5,114,0,0,123,119,1,
        0,0,0,123,121,1,0,0,0,124,28,1,0,0,0,125,126,5,76,0,0,126,127,5,
        69,0,0,127,132,5,84,0,0,128,129,5,108,0,0,129,130,5,101,0,0,130,
        132,5,116,0,0,131,125,1,0,0,0,131,128,1,0,0,0,132,30,1,0,0,0,133,
        134,5,80,0,0,134,135,5,82,0,0,135,136,5,73,0,0,136,137,5,78,0,0,
        137,144,5,84,0,0,138,139,5,112,0,0,139,140,5,114,0,0,140,141,5,105,
        0,0,141,142,5,110,0,0,142,144,5,116,0,0,143,133,1,0,0,0,143,138,
        1,0,0,0,144,32,1,0,0,0,145,146,5,73,0,0,146,147,5,78,0,0,147,148,
        5,80,0,0,148,149,5,85,0,0,149,156,5,84,0,0,150,151,5,105,0,0,151,
        152,5,110,0,0,152,153,5,112,0,0,153,154,5,117,0,0,154,156,5,116,
        0,0,155,145,1,0,0,0,155,150,1,0,0,0,156,34,1,0,0,0,157,158,5,73,
        0,0,158,162,5,70,0,0,159,160,5,105,0,0,160,162,5,102,0,0,161,157,
        1,0,0,0,161,159,1,0,0,0,162,36,1,0,0,0,163,164,5,69,0,0,164,165,
        5,76,0,0,165,166,5,83,0,0,166,172,5,69,0,0,167,168,5,101,0,0,168,
        169,5,108,0,0,169,170,5,115,0,0,170,172,5,101,0,0,171,163,1,0,0,
        0,171,167,1,0,0,0,172,38,1,0,0,0,173,174,5,70,0,0,174,175,5,79,0,
        0,175,180,5,82,0,0,176,177,5,102,0,0,177,178,5,111,0,0,178,180,5,
        114,0,0,179,173,1,0,0,0,179,176,1,0,0,0,180,40,1,0,0,0,181,182,5,
        84,0,0,182,186,5,79,0,0,183,184,5,116,0,0,184,186,5,111,0,0,185,
        181,1,0,0,0,185,183,1,0,0,0,186,42,1,0,0,0,187,188,5,78,0,0,188,
        189,5,69,0,0,189,190,5,88,0,0,190,196,5,84,0,0,191,192,5,110,0,0,
        192,193,5,101,0,0,193,194,5,120,0,0,194,196,5,116,0,0,195,187,1,
        0,0,0,195,191,1,0,0,0,196,44,1,0,0,0,197,198,5,87,0,0,198,199,5,
        72,0,0,199,200,5,73,0,0,200,201,5,76,0,0,201,208,5,69,0,0,202,203,
        5,119,0,0,203,204,5,104,0,0,204,205,5,105,0,0,205,206,5,108,0,0,
        206,208,5,101,0,0,207,197,1,0,0,0,207,202,1,0,0,0,208,46,1,0,0,0,
        209,210,5,82,0,0,210,211,5,69,0,0,211,212,5,80,0,0,212,213,5,69,
        0,0,213,214,5,65,0,0,214,222,5,84,0,0,215,216,5,114,0,0,216,217,
        5,101,0,0,217,218,5,112,0,0,218,219,5,101,0,0,219,220,5,97,0,0,220,
        222,5,116,0,0,221,209,1,0,0,0,221,215,1,0,0,0,222,48,1,0,0,0,223,
        224,5,85,0,0,224,225,5,78,0,0,225,226,5,84,0,0,226,227,5,73,0,0,
        227,234,5,76,0,0,228,229,5,117,0,0,229,230,5,110,0,0,230,231,5,116,
        0,0,231,232,5,105,0,0,232,234,5,108,0,0,233,223,1,0,0,0,233,228,
        1,0,0,0,234,50,1,0,0,0,235,236,5,67,0,0,236,237,5,79,0,0,237,238,
        5,78,0,0,238,239,5,84,0,0,239,240,5,73,0,0,240,241,5,78,0,0,241,
        242,5,85,0,0,242,252,5,69,0,0,243,244,5,99,0,0,244,245,5,111,0,0,
        245,246,5,110,0,0,246,247,5,116,0,0,247,248,5,105,0,0,248,249,5,
        110,0,0,249,250,5,117,0,0,250,252,5,101,0,0,251,235,1,0,0,0,251,
        243,1,0,0,0,252,52,1,0,0,0,253,254,5,69,0,0,254,255,5,88,0,0,255,
        256,5,73,0,0,256,262,5,84,0,0,257,258,5,101,0,0,258,259,5,120,0,
        0,259,260,5,105,0,0,260,262,5,116,0,0,261,253,1,0,0,0,261,257,1,
        0,0,0,262,54,1,0,0,0,263,264,5,69,0,0,264,265,5,78,0,0,265,270,5,
        68,0,0,266,267,5,101,0,0,267,268,5,110,0,0,268,270,5,100,0,0,269,
        263,1,0,0,0,269,266,1,0,0,0,270,56,1,0,0,0,271,272,5,84,0,0,272,
        273,5,72,0,0,273,274,5,69,0,0,274,280,5,78,0,0,275,276,5,116,0,0,
        276,277,5,104,0,0,277,278,5,101,0,0,278,280,5,110,0,0,279,271,1,
        0,0,0,279,275,1,0,0,0,280,58,1,0,0,0,281,282,5,77,0,0,282,283,5,
        79,0,0,283,289,5,68,0,0,284,285,5,109,0,0,285,286,5,111,0,0,286,
        289,5,100,0,0,287,289,5,37,0,0,288,281,1,0,0,0,288,284,1,0,0,0,288,
        287,1,0,0,0,289,60,1,0,0,0,290,291,5,86,0,0,291,292,5,65,0,0,292,
        297,5,76,0,0,293,294,5,118,0,0,294,295,5,97,0,0,295,297,5,108,0,
        0,296,290,1,0,0,0,296,293,1,0,0,0,297,62,1,0,0,0,298,299,5,76,0,
        0,299,300,5,69,0,0,300,305,5,78,0,0,301,302,5,108,0,0,302,303,5,
        101,0,0,303,305,5,110,0,0,304,298,1,0,0,0,304,301,1,0,0,0,305,64,
        1,0,0,0,306,307,5,73,0,0,307,308,5,83,0,0,308,309,5,78,0,0,309,310,
        5,65,0,0,310,317,5,78,0,0,311,312,5,105,0,0,312,313,5,115,0,0,313,
        314,5,110,0,0,314,315,5,97,0,0,315,317,5,110,0,0,316,306,1,0,0,0,
        316,311,1,0,0,0,317,66,1,0,0,0,318,322,7,0,0,0,319,321,7,1,0,0,320,
        319,1,0,0,0,321,324,1,0,0,0,322,320,1,0,0,0,322,323,1,0,0,0,323,
        68,1,0,0,0,324,322,1,0,0,0,325,327,7,2,0,0,326,325,1,0,0,0,327,328,
        1,0,0,0,328,326,1,0,0,0,328,329,1,0,0,0,329,336,1,0,0,0,330,332,
        5,46,0,0,331,333,7,2,0,0,332,331,1,0,0,0,333,334,1,0,0,0,334,332,
        1,0,0,0,334,335,1,0,0,0,335,337,1,0,0,0,336,330,1,0,0,0,336,337,
        1,0,0,0,337,70,1,0,0,0,338,342,5,34,0,0,339,341,8,3,0,0,340,339,
        1,0,0,0,341,344,1,0,0,0,342,340,1,0,0,0,342,343,1,0,0,0,343,345,
        1,0,0,0,344,342,1,0,0,0,345,346,5,34,0,0,346,72,1,0,0,0,347,349,
        5,13,0,0,348,347,1,0,0,0,348,349,1,0,0,0,349,350,1,0,0,0,350,351,
        5,10,0,0,351,74,1,0,0,0,352,353,5,82,0,0,353,354,5,69,0,0,354,355,
        5,77,0,0,355,359,1,0,0,0,356,358,8,4,0,0,357,356,1,0,0,0,358,361,
        1,0,0,0,359,357,1,0,0,0,359,360,1,0,0,0,360,362,1,0,0,0,361,359,
        1,0,0,0,362,363,3,73,36,0,363,364,1,0,0,0,364,365,6,37,0,0,365,76,
        1,0,0,0,366,368,7,5,0,0,367,366,1,0,0,0,368,369,1,0,0,0,369,367,
        1,0,0,0,369,370,1,0,0,0,370,371,1,0,0,0,371,372,6,38,0,0,372,78,
        1,0,0,0,31,0,109,117,123,131,143,155,161,171,179,185,195,207,221,
        233,251,261,269,279,288,296,304,316,322,328,334,336,342,348,359,
        369,1,6,0,0
    ]

class MiniBLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    NOT = 12
    AND = 13
    OR = 14
    LET = 15
    PRINT = 16
    INPUT = 17
    IF = 18
    ELSE = 19
    FOR = 20
    TO = 21
    NEXT = 22
    WHILE = 23
    REPEAT = 24
    UNTIL = 25
    CONTINUE = 26
    EXIT = 27
    END = 28
    THEN = 29
    MOD = 30
    VAL = 31
    LEN = 32
    ISNAN = 33
    ID = 34
    NUMBER = 35
    STRING_LITERAL = 36
    NEWLINE = 37
    COMMENT = 38
    WS = 39

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'<'", "'>'", "'<='", "'>='", "'+'", "'-'", "'*'", "'/'", 
            "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "NOT", "AND", "OR", "LET", "PRINT", "INPUT", "IF", "ELSE", "FOR", 
            "TO", "NEXT", "WHILE", "REPEAT", "UNTIL", "CONTINUE", "EXIT", 
            "END", "THEN", "MOD", "VAL", "LEN", "ISNAN", "ID", "NUMBER", 
            "STRING_LITERAL", "NEWLINE", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "NOT", "AND", "OR", "LET", 
                  "PRINT", "INPUT", "IF", "ELSE", "FOR", "TO", "NEXT", "WHILE", 
                  "REPEAT", "UNTIL", "CONTINUE", "EXIT", "END", "THEN", 
                  "MOD", "VAL", "LEN", "ISNAN", "ID", "NUMBER", "STRING_LITERAL", 
                  "NEWLINE", "COMMENT", "WS" ]

    grammarFileName = "MiniB.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


